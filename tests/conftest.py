import base64
from pathlib import Path

import pytest

PDF_B64 = """
JVBERi0xLjMKJZOMi54gUmVwb3J0TGFiIEdlbmVyYXRlZCBQREYgZG9jdW1lbnQgaHR0cDovL3d3
dy5yZXBvcnRsYWIuY29tCjEgMCBvYmoKPDwKL0YxIDIgMCBSCj4+CmVuZG9iagoyIDAgb2JqCjw8
Ci9CYXNlRm9udCAvSGVsdmV0aWNhIC9FbmNvZGluZyAvV2luQW5zaUVuY29kaW5nIC9OYW1lIC9G
MSAvU3VidHlwZSAvVHlwZTEgL1R5cGUgL0ZvbnQKPj4KZW5kb2JqCjMgMCBvYmoKPDwKL0NvbnRl
bnRzIDcgMCBSIC9NZWRpYUJveCBbIDAgMCA1OTUuMjc1NiA4NDEuODg5OCBdIC9QYXJlbnQgNiAw
IFIgL1Jlc291cmNlcyA8PAovRm9udCAxIDAgUiAvUHJvY1NldCBbIC9QREYgL1RleHQgL0ltYWdl
QiAvSW1hZ2VDIC9JbWFnZUkgXQo+PiAvUm90YXRlIDAgL1RyYW5zIDw8Cgo+PiAKICAvVHlwZSAv
UGFnZQo+PgplbmRvYmoKNCAwIG9iago8PAovUGFnZU1vZGUgL1VzZU5vbmUgL1BhZ2VzIDYgMCBS
IC9UeXBlIC9DYXRhbG9nCj4+CmVuZG9iago1IDAgb2JqCjw8Ci9BdXRob3IgKGFub255bW91cykg
L0NyZWF0aW9uRGF0ZSAoRDoyMDI1MDgxNDEwMzc1MiswMCcwMCcpIC9DcmVhdG9yIChSZXBvcnRM
YWIgUERGIExpYnJhcnkgLSB3d3cucmVwb3J0bGFiLmNvbSkgL0tleXdvcmRzICgpIC9Nb2REYXRl
IChEOjIwMjUwODE0MTAzNzUyKzAwJzAwJykgL1Byb2R1Y2VyIChSZXBvcnRMYWIgUERGIExpYnJh
cnkgLSB3d3cucmVwb3J0bGFiLmNvbSkgCiAgL1N1YmplY3QgKHVuc3BlY2lmaWVkKSAvVGl0bGUg
KHVudGl0bGVkKSAvVHJhcHBlZCAvRmFsc2UKPj4KZW5kb2JqCjYgMCBvYmoKPDwKL0NvdW50IDEg
L0tpZHMgWyAzIDAgUiBdIC9UeXBlIC9QYWdlcwo+PgplbmRvYmoKNyAwIG9iago8PAovRmlsdGVy
IFsgL0FTQ0lJODVEZWNvZGUgL0ZsYXRlRGVjb2RlIF0gL0xlbmd0aCAxMDIKPj4Kc3RyZWFtCkdh
cFFoMEU9RiwwVVxIM1RccE5ZVF5RS2s/dGM+SVAsO1cjVTFeMjNpaFBFTV8/Q1c0S0lTaTkwTWpH
XjIsRlMjPFJDNStjLG4oLyNdT2U0PCFeVEQjZ2ldJjxUIW9ZbDNTKCt+PmVuZHN0cmVhbQplbmRv
YmoKeHJlZgowIDgKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMDczIDAwMDAwIG4gCjAwMDAw
MDAxMDQgMDAwMDAgbiAKMDAwMDAwMDIxMSAwMDAwMCBuIAowMDAwMDAwNDE0IDAwMDAwIG4gCjAw
MDAwMDA0ODIgMDAwMDAgbiAKMDAwMDAwMDc3OCAwMDAwMCBuIAowMDAwMDAwODM3IDAwMDAwIG4g
CnRyYWlsZXIKPDwKL0lEIApbPGE1ZTI3ODViOTEzMDI0YmUyMjRmMjZjYzhjOTUwMDlkPjxhNWUy
Nzg1YjkxMzAyNGJlMjI0ZjI2Y2M4Yzk1MDA5ZD5dCiUgUmVwb3J0TGFiIGdlbmVyYXRlZCBQREYg
ZG9jdW1lbnQgLS0gZGlnZXN0IChodHRwOi8vd3d3LnJlcG9ydGxhYi5jb20pCgovSW5mbyA1IDAg
UgovUm9vdCA0IDAgUgovU2l6ZSA4Cj4+CnN0YXJ0eHJlZgoxMDI5CiUlRU9GCg==
""".replace("\n", "")

DOCX_B64 = """
UEsDBBQAAAAAAOxUDludxYoquQEAALkBAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbDw/eG1sIHZl
cnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFuZGFsb25lPSJ5ZXMiPz4KPFR5cGVzIHht
bG5zPSJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvcGFja2FnZS8yMDA2L2NvbnRl
bnQtdHlwZXMiPgogIDxEZWZhdWx0IEV4dGVuc2lvbj0icmVscyIgQ29udGVudFR5cGU9ImFwcGxp
Y2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1wYWNrYWdlLnJlbGF0aW9uc2hpcHMreG1sIi8+CiAg
PERlZmF1bHQgRXh0ZW5zaW9uPSJ4bWwiIENvbnRlbnRUeXBlPSJhcHBsaWNhdGlvbi94bWwiLz4K
ICA8T3ZlcnJpZGUgUGFydE5hbWU9Ii93b3JkL2RvY3VtZW50LnhtbCIgQ29udGVudFR5cGU9ImFw
cGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2lu
Z21sLmRvY3VtZW50Lm1haW4reG1sIi8+CjwvVHlwZXM+ClBLAwQUAAAAAADsVA5bQKBTCS8BAAAv
AQAACwAAAF9yZWxzLy5yZWxzPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0
YW5kYWxvbmU9InllcyI/Pgo8UmVsYXRpb25zaGlwcyB4bWxucz0iaHR0cDovL3NjaGVtYXMub3Bl
bnhtbGZvcm1hdHMub3JnL3BhY2thZ2UvMjAwNi9yZWxhdGlvbnNoaXBzIj4KICA8UmVsYXRpb25z
aGlwIElkPSJySWQxIiBUeXBlPSJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvb2Zm
aWNlRG9jdW1lbnQvMjAwNi9yZWxhdGlvbnNoaXBzL29mZmljZURvY3VtZW50IiBUYXJnZXQ9Indv
cmQvZG9jdW1lbnQueG1sIi8+CjwvUmVsYXRpb25zaGlwcz4KUEsDBBQAAAAAAOxUDlsiAni9/QAA
AP0AAAARAAAAd29yZC9kb2N1bWVudC54bWw8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJV
VEYtOCIgc3RhbmRhbG9uZT0ieWVzIj8+Cjx3OmRvY3VtZW50IHhtbG5zOnc9Imh0dHA6Ly9zY2hl
bWFzLm9wZW54bWxmb3JtYXRzLm9yZy93b3JkcHJvY2Vzc2luZ21sLzIwMDYvbWFpbiI+CiAgPHc6
Ym9keT4KICAgIDx3OnA+CiAgICAgIDx3OnI+CiAgICAgICAgPHc6dD5IZWxsbyBET0NYPC93OnQ+
CiAgICAgIDwvdzpyPgogICAgPC93OnA+CiAgPC93OmJvZHk+Cjwvdzpkb2N1bWVudD4KUEsDBBQA
AAAAAOxUDlvV6iDXjgAAAI4AAAAcAAAAd29yZC9fcmVscy9kb2N1bWVudC54bWwucmVsczw/eG1s
IHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFuZGFsb25lPSJ5ZXMiPz4KPFJlbGF0
aW9uc2hpcHMgeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9wYWNrYWdl
LzIwMDYvcmVsYXRpb25zaGlwcyIvPgpQSwECFAMUAAAAAADsVA5bncWKKrkBAAC5AQAAEwAAAAAA
AAAAAAAAgAEAAAAAW0NvbnRlbnRfVHlwZXNdLnhtbFBLAQIUAxQAAAAAAOxUDltAoFMJLwEAAC8B
AAALAAAAAAAAAAAAAACAAeoBAABfcmVscy8ucmVsc1BLAQIUAxQAAAAAAOxUDlsiAni9/QAAAP0A
AAARAAAAAAAAAAAAAACAAUIDAAB3b3JkL2RvY3VtZW50LnhtbFBLAQIUAxQAAAAAAOxUDlvV6iDX
jgAAAI4AAAAcAAAAAAAAAAAAAACAAW4EAAB3b3JkL19yZWxzL2RvY3VtZW50LnhtbC5yZWxzUEsF
BgAAAAAEAAQAAwEAADYFAAAAAA==
""".replace("\n", "")

PPTX_B64 = """
UEsDBBQAAAAAAOxUDlvekg3OQwIAAEMCAAATAAAAW0NvbnRlbnRfVHlwZXNdLnhtbDw/eG1sIHZl
cnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFuZGFsb25lPSJ5ZXMiPz4KPFR5cGVzIHht
bG5zPSJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvcGFja2FnZS8yMDA2L2NvbnRl
bnQtdHlwZXMiPgogIDxEZWZhdWx0IEV4dGVuc2lvbj0icmVscyIgQ29udGVudFR5cGU9ImFwcGxp
Y2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1wYWNrYWdlLnJlbGF0aW9uc2hpcHMreG1sIi8+CiAg
PERlZmF1bHQgRXh0ZW5zaW9uPSJ4bWwiIENvbnRlbnRUeXBlPSJhcHBsaWNhdGlvbi94bWwiLz4K
ICA8T3ZlcnJpZGUgUGFydE5hbWU9Ii9wcHQvc2xpZGVzL3NsaWRlMS54bWwiIENvbnRlbnRUeXBl
PSJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0
aW9ubWwuc2xpZGUreG1sIi8+CiAgPE92ZXJyaWRlIFBhcnROYW1lPSIvcHB0L3ByZXNlbnRhdGlv
bi54bWwiIENvbnRlbnRUeXBlPSJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNl
ZG9jdW1lbnQucHJlc2VudGF0aW9ubWwucHJlc2VudGF0aW9uLm1haW4reG1sIi8+CjwvVHlwZXM+
ClBLAwQUAAAAAADsVA5b+Iz/9DIBAAAyAQAACwAAAF9yZWxzLy5yZWxzPD94bWwgdmVyc2lvbj0i
MS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8UmVsYXRpb25zaGlwcyB4
bWxucz0iaHR0cDovL3NjaGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL3BhY2thZ2UvMjAwNi9yZWxh
dGlvbnNoaXBzIj4KICA8UmVsYXRpb25zaGlwIElkPSJySWQxIiBUeXBlPSJodHRwOi8vc2NoZW1h
cy5vcGVueG1sZm9ybWF0cy5vcmcvb2ZmaWNlRG9jdW1lbnQvMjAwNi9yZWxhdGlvbnNoaXBzL29m
ZmljZURvY3VtZW50IiBUYXJnZXQ9InBwdC9wcmVzZW50YXRpb24ueG1sIi8+CjwvUmVsYXRpb25z
aGlwcz4KUEsDBBQAAAAAAOxUDlsdXrj9gQEAAIEBAAAUAAAAcHB0L3ByZXNlbnRhdGlvbi54bWw8
P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCIgc3RhbmRhbG9uZT0ieWVzIj8+Cjxw
OnByZXNlbnRhdGlvbiB4bWxuczpwPSJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcv
cHJlc2VudGF0aW9ubWwvMjAwNi9tYWluIiB4bWxuczpyPSJodHRwOi8vc2NoZW1hcy5vcGVueG1s
Zm9ybWF0cy5vcmcvb2ZmaWNlRG9jdW1lbnQvMjAwNi9yZWxhdGlvbnNoaXBzIj4KICA8cDpzbGRJ
ZExzdD4KICAgIDxwOnNsZElkIGlkPSIyNTYiIHI6aWQ9InJJZDEiLz4KICA8L3A6c2xkSWRMc3Q+
CiAgPHA6c2xkU3ogY3g9IjkxNDQwMDAiIGN5PSI2ODU4MDAwIi8+CiAgPHA6bm90ZXNTeiBjeD0i
Njg1ODAwMCIgY3k9IjkxNDQwMDAiLz4KPC9wOnByZXNlbnRhdGlvbj4KUEsDBBQAAAAAAOxUDltb
4UsSJgEAACYBAAAfAAAAcHB0L19yZWxzL3ByZXNlbnRhdGlvbi54bWwucmVsczw/eG1sIHZlcnNp
b249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFuZGFsb25lPSJ5ZXMiPz4KPFJlbGF0aW9uc2hp
cHMgeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9wYWNrYWdlLzIwMDYv
cmVsYXRpb25zaGlwcyI+CiAgPFJlbGF0aW9uc2hpcCBJZD0icklkMSIgVHlwZT0iaHR0cDovL3Nj
aGVtYXMub3BlbnhtbGZvcm1hdHMub3JnL29mZmljZURvY3VtZW50LzIwMDYvcmVsYXRpb25zaGlw
cy9zbGlkZSIgVGFyZ2V0PSJzbGlkZXMvc2xpZGUxLnhtbCIvPgo8L1JlbGF0aW9uc2hpcHM+ClBL
AwQUAAAAAADsVA5bc7/QNKgCAACoAgAAFQAAAHBwdC9zbGlkZXMvc2xpZGUxLnhtbDw/eG1sIHZl
cnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFuZGFsb25lPSJ5ZXMiPz4KPHA6c2xkIHht
bG5zOnA9Imh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9wcmVzZW50YXRpb25tbC8y
MDA2L21haW4iIHhtbG5zOmE9Imh0dHA6Ly9zY2hlbWFzLm9wZW54bWxmb3JtYXRzLm9yZy9kcmF3
aW5nbWwvMjAwNi9tYWluIj4KICA8cDpjU2xkPgogICAgPHA6c3BUcmVlPgogICAgICA8cDpzcD4K
ICAgICAgICA8cDpudlNwUHI+CiAgICAgICAgICA8cDpjTnZQciBpZD0iMSIgbmFtZT0iVGl0bGUg
MSIvPgogICAgICAgICAgPHA6Y052U3BQci8+CiAgICAgICAgICA8cDpudlByLz4KICAgICAgICA8
L3A6bnZTcFByPgogICAgICAgIDxwOnNwUHIvPgogICAgICAgIDxwOnR4Qm9keT4KICAgICAgICAg
IDxhOmJvZHlQci8+CiAgICAgICAgICA8YTpsc3RTdHlsZS8+CiAgICAgICAgICA8YTpwPgogICAg
ICAgICAgICA8YTpyPgogICAgICAgICAgICAgIDxhOnQ+SGVsbG8gUFBUWDwvYTp0PgogICAgICAg
ICAgICA8L2E6cj4KICAgICAgICAgIDwvYTpwPgogICAgICAgIDwvcDp0eEJvZHk+CiAgICAgIDwv
cDpzcD4KICAgIDwvcDpzcFRyZWU+CiAgPC9wOmNTbGQ+CiAgPHA6Y2xyTWFwT3ZyPgogICAgPGE6
bWFzdGVyQ2xyTWFwcGluZy8+CiAgPC9wOmNsck1hcE92cj4KPC9wOnNsZD4KUEsDBBQAAAAAAOxU
DlvV6iDXjgAAAI4AAAAgAAAAcHB0L3NsaWRlcy9fcmVscy9zbGlkZTEueG1sLnJlbHM8P3htbCB2
ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCIgc3RhbmRhbG9uZT0ieWVzIj8+CjxSZWxhdGlv
bnNoaXBzIHhtbG5zPSJodHRwOi8vc2NoZW1hcy5vcGVueG1sZm9ybWF0cy5vcmcvcGFja2FnZS8y
MDA2L3JlbGF0aW9uc2hpcHMiLz4KUEsBAhQDFAAAAAAA7FQOW96SDc5DAgAAQwIAABMAAAAAAAAA
AAAAAIABAAAAAFtDb250ZW50X1R5cGVzXS54bWxQSwECFAMUAAAAAADsVA5b+Iz/9DIBAAAyAQAA
CwAAAAAAAAAAAAAAgAF0AgAAX3JlbHMvLnJlbHNQSwECFAMUAAAAAADsVA5bHV64/YEBAACBAQAA
FAAAAAAAAAAAAAAAgAHPAwAAcHB0L3ByZXNlbnRhdGlvbi54bWxQSwECFAMUAAAAAADsVA5bW+FL
EiYBAAAmAQAAHwAAAAAAAAAAAAAAgAGCBQAAcHB0L19yZWxzL3ByZXNlbnRhdGlvbi54bWwucmVs
c1BLAQIUAxQAAAAAAOxUDltzv9A0qAIAAKgCAAAVAAAAAAAAAAAAAACAAeUGAABwcHQvc2xpZGVz
L3NsaWRlMS54bWxQSwECFAMUAAAAAADsVA5b1eog144AAACOAAAAIAAAAAAAAAAAAAAAgAHACQAA
cHB0L3NsaWRlcy9fcmVscy9zbGlkZTEueG1sLnJlbHNQSwUGAAAAAAYABgCaAQAAjAoAAAAA
""".replace("\n", "")


def _write_file(tmp_path: Path, b64: str, name: str) -> Path:
    path = tmp_path / name
    path.write_bytes(base64.b64decode(b64))
    return path


@pytest.fixture
def sample_pdf(tmp_path: Path) -> Path:
    yield _write_file(tmp_path, PDF_B64, "sample.pdf")


@pytest.fixture
def sample_docx(tmp_path: Path) -> Path:
    yield _write_file(tmp_path, DOCX_B64, "sample.docx")


@pytest.fixture
def sample_pptx(tmp_path: Path) -> Path:
    yield _write_file(tmp_path, PPTX_B64, "sample.pptx")

